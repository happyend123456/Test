<meta http-equiv="content-type" content="text/html; charset=utf-8" /><style>	canvas {		background: #f8f8f8;		border: 1px solid gray;	}</style>Java：<input name="courses" item="Java" value="220" /><br/>C：<input name="courses" item="C" value="120" /><br/>PHP：<input name="courses" item="PHP" value="100" /><br/>Android：<input name="courses" item="Android" value="190" /><br/>iOS：<input name="courses" item="iOS" value="160" /><br/><button onclick="genLinechart()">生成图表</button><br/><canvas id="c" width="700px" height="430"></canvas><script>	// 加载logo	let logo = new Image();	logo.src = "logo.png";	let c = document.querySelector("#c");	let ctx = c.getContext("2d");	// 输入数据	let courses = document.querySelectorAll("input[name='courses']");	// 设置文字绘制都以x，y坐标位置居中对齐	ctx.textAlign = "center";	ctx.textBaseline = "middle";	ctx.font = "20px Times New Roman";	// 折线点之间的间距	const LINE_OFFSET = 100;	const WIDTH = c.width;	const HEIGHT = c.height;	const ARROW = 20;	// 等高线高度	const LINE_HEIGHT = 50;	// 四边空白	const PADDING = 50;		function genLinechart() {		// 清空画布		ctx.clearRect(0, 0, WIDTH, HEIGHT);				// 绘制右上角logo		ctx.drawImage(logo, WIDTH - logo.width, 0);				// 坐标线		ctx.beginPath();		ctx.moveTo(PADDING, PADDING);		ctx.lineTo(PADDING, HEIGHT - PADDING);		ctx.lineTo(WIDTH - PADDING, HEIGHT - PADDING);		ctx.stroke();		// y轴箭头		ctx.beginPath();		ctx.moveTo(PADDING, PADDING);		ctx.lineTo(PADDING - ARROW / 2, PADDING + ARROW);		ctx.lineTo(PADDING + ARROW / 2, PADDING + ARROW);		ctx.closePath();		ctx.fill();		// 等高线		// 多少行等高线		let lines = Math.floor((HEIGHT - PADDING * 2) / LINE_HEIGHT);		for (let i=1; i<=lines; i++) {			ctx.beginPath();			ctx.moveTo(PADDING, HEIGHT - PADDING - i * LINE_HEIGHT);			ctx.lineTo(WIDTH - PADDING, HEIGHT - PADDING - i * LINE_HEIGHT);			ctx.stroke();		}		// y轴标度		ctx.fillText(0, PADDING / 2, HEIGHT - PADDING);		for (let i=1; i<=lines; i++) {			ctx.fillText(i * LINE_HEIGHT, PADDING / 2, HEIGHT - PADDING - i * LINE_HEIGHT);		}		// x轴内容		courses.forEach((course, index) => {			ctx.fillText(course.getAttribute("item"), PADDING + (index + 1) * LINE_OFFSET, HEIGHT - PADDING / 2);		});		// 折线		ctx.beginPath();		courses.forEach((course, index) => {			ctx.lineTo(PADDING + (index + 1) * LINE_OFFSET, HEIGHT - PADDING - course.value);			ctx.stroke();			// 数值			ctx.fillText(course.value, PADDING + (index + 1) * LINE_OFFSET, HEIGHT - PADDING - course.value - 10);		});			}</script>